'''
error / exception - python 에서는 두개 비슷한 개념으로 사용, 프로그램 실행 중에 발생할 수 있는 오류

- Error : 컴파일 시 문법적인 오류와 런타임 시 널포인트 참조와 같은 오류로 프로세스에 심각한 문제를 야기 시켜 프로세스를 종료 시킬 수 있다.
- Exception : 컴퓨터 시스템의 동작 도중 예기치 않았던 이상 상태가 발생하여 수행 중인 프로그램이 영향을 받는 것. 예를 들면, 연산 도중 넘침에 의해 발생한 끼어들기 등이 이에 해당한다.

 error 발생했을 때 해결방법 2 가지
 1) error가 발생한 코드 위치를 찾아서 발생원인을 고친다
 2) error가 발생해도 코드가 실행될 수 있도록 고친다 - try 구문 사용

'''


# 실습 1 : NameError
# print(i) : 변수 이름이나 함수 이름이 없는데도 사용하려고 할 때


# 실습 2 : ValueError
#n = int('123.') #int(input('정수를 입력하세요'))
# int() : 문자열을 정수로 변환해준다.
# float() : 문자열을 실수로 변환해준다.
#print(n) # int() with base 10: '123.' # . 때문에 십진수로 변환할 수 없다


# 실습 3 : IndexError
# numbers = [1, 2, 3]
# print(numbers[3]) # 인덱스가 리스트의 범위를 넘어갔기 때문에 반환할 수 없다.


# 실습 4 : TypeError
# print('123' + 456) # 문자열과 숫자는 더하기 할 수 없음
# n = 100
# x = input('정수 입력하세요')
# print(n + x)


# 실습 5 : ZeroDivisionError
# print(123/0) # 0으로 나누는 것 불가능


